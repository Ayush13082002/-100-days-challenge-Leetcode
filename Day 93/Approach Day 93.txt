Approach
To solve this problem, we can perform a depth-first search (DFS) traversal of the BST. At each node, we check whether its value falls within the specified range [low, high]. If the current node's value is within the range, we include it in the sum. We then recursively traverse the left and right subtrees.
The algorithm follows these steps:
1. If the current node is null, return 0.
2. If the current node's value is within the range [low, high], include it in the sum; otherwise, exclude it.
3. Recursively calculate the sum for the left subtree and the sum for the right subtree.
4. Return the sum of the current node, left subtree sum, and right subtree sum.s