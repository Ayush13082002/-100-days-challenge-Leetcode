Approach
Initialize a dynamic programming array dp of length n + 1, where n is the length of the input string s. Set dp[n] = 1 since there is one way to decode an empty string.
Iterate backward through the string from n - 1 to 0.
If the current character is not '0', set dp[i] to dp[i + 1], indicating that we can decode the current digit individually.
If the current and the next character form a valid two-digit number ('10' to '26'), add dp[i + 2] to dp[i]. This accounts for the possibility of decoding the current digit along with the next digit.
The final answer is stored in dp[0], representing the number of ways to decode the entire string.